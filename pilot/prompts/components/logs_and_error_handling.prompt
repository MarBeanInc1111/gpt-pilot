import logging

def some_function():
    logger = logging.getLogger(__name__)

    # Log that the function has started
    logger.info("some_function started")

    try:
        # Code that may raise an exception
        result = complicated_operation()

        # Log the result
        logger.info(f"some_function completed with result: {result}")

        return result

    except Exception as e:
        # Log the entire error, including the traceback
        logger.error("Error in some_function", exc_info=True)

        # Raise the error so it can be handled at a higher level
        raise

def complicated_operation():
    # Code that may raise an exception
    raise Exception("An error occurred")

# Configure logging
logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
                    datefmt='%m-%d %H:%M:%S')

# Call the function
some_function()
