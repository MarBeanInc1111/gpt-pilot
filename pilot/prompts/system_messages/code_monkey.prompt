// db.js
const { MongoClient } = require('mongodb');

const uri = 'mongodb://localhost:27017';
const dbName = 'myDatabase';

let client;
let db;

async function connect() {
  client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });
  await client.connect();
  db = client.db(dbName);
}

async function getDb() {
  if (!db) {
    await connect();
  }
  return db;
}

module.exports = {
  connect,
  getDb,
};

// user.model.js
const { getDb } = require('./db');

const usersCollectionName = 'users';

class User {
  constructor(name, email) {
    this.name = name;
    this.email = email;
  }

  static async getAll() {
    const db = await getDb();
    const users = await db.collection(usersCollectionName).find().toArray();
    return users.map((user) => new User(user.name, user.email));
  }

  static async getById(id) {
    const db = await getDb();
    const user = await db.collection(usersCollectionName).findOne({ _id: new MongoClient.ObjectID(id) });
    if (!user) {
      return null;
    }
    return new User(user.name, user.email);
  }

  async save() {
    const db = await getDb();
    const result = await db.collection(usersCollectionName).insertOne(this);
    this._id = result.insertedId;
  }

  async delete() {
    const db = await getDb();
    await db.collection(usersCollectionName).deleteOne({ _id: new MongoClient.ObjectID(this._id) });
  }
}

module.exports = User;

// user.routes.js
const express = require('express');
const User = require('./user.model');

const router = express.Router();

router.get('/', async (req, res) => {
  const users = await User.getAll();
  res.json(users);
});

router.get('/:id', async (req, res) => {
  const user = await User.getById(req.params.id);
  if (!user) {
    return res.sendStatus(404);
  }
  res.json(user);
});

router.post('/', async (req, res) => {
  const { name, email } = req.body;
  const user = new User(name, email);
  await user.save();
  res.status(201).json(user);
});

router.delete('/:id', async (req, res) => {
  const user = await User.getById(req.params.id);
  if (!user) {
    return res.sendStatus(404);
 
